name: Release

on:
  push:
    tags:
      - 'v[0-9]+.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Verify version matches tag
        run: |
          TAG_VERSION="${GITHUB_REF#refs/tags/v}"
          CARGO_VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[] | select(.name == "xjp-oidc") | .version')
          if [ "$TAG_VERSION" != "$CARGO_VERSION" ]; then
            echo "Tag version $TAG_VERSION does not match Cargo.toml version $CARGO_VERSION"
            exit 1
          fi

      - name: Build and test
        run: |
          cargo build --workspace --all-features
          cargo test --workspace --all-features

      - name: Publish xjp-oidc
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cd xjp-oidc
          cargo publish --dry-run
          cargo publish

      - name: Wait for crates.io to update
        run: sleep 30

      - name: Publish xjp-oidc-axum
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cd xjp-oidc-axum
          cargo publish --dry-run
          cargo publish

  release:
    name: Create GitHub Release
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract version
        id: extract_version
        run: |
          VERSION="${GITHUB_REF#refs/tags/v}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.extract_version.outputs.VERSION }}
          draft: false
          prerelease: ${{ contains(steps.extract_version.outputs.VERSION, '-') }}
          generate_release_notes: true
          body: |
            ## xjp-oidc v${{ steps.extract_version.outputs.VERSION }}

            ### Installation

            ```toml
            [dependencies]
            xjp-oidc = "${{ steps.extract_version.outputs.VERSION }}"

            # For Axum integration
            xjp-oidc-axum = "${{ steps.extract_version.outputs.VERSION }}"
            ```

            ### Documentation

            - [Getting Started Guide](https://github.com/xiaojinpro/xjp-oidc/blob/v${{ steps.extract_version.outputs.VERSION }}/GETTING_STARTED.md)
            - [API Reference](https://docs.rs/xjp-oidc/${{ steps.extract_version.outputs.VERSION }})
            - [Examples](https://github.com/xiaojinpro/xjp-oidc/tree/v${{ steps.extract_version.outputs.VERSION }}/examples)

            ### What's Changed

            See the full changelog below.

  docs:
    name: Deploy Documentation
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build docs
        run: |
          cargo doc --workspace --all-features --no-deps
          echo '<meta http-equiv="refresh" content="0; url=xjp_oidc">' > target/doc/index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc
          cname: xjp-oidc.rs