name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test - ${{ matrix.os }} - Rust ${{ matrix.rust }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        rust:
          - stable
          - beta
          - 1.82.0  # MSRV
        features:
          - default
          - http-reqwest,moka,lru,verifier,tracing
          - http-wasm,browser-min
        exclude:
          # WASM tests only on stable Linux
          - features: http-wasm,browser-min
            os: windows-latest
          - features: http-wasm,browser-min
            os: macos-latest
          - features: http-wasm,browser-min
            rust: beta
          - features: http-wasm,browser-min
            rust: 1.82.0

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy --workspace --features "${{ matrix.features }}" -- -D warnings

      - name: Build
        run: cargo build --workspace --features "${{ matrix.features }}"

      - name: Test
        run: cargo test --workspace --features "${{ matrix.features }}"

      - name: Doc
        run: cargo doc --workspace --features "${{ matrix.features }}" --no-deps

  wasm:
    name: WASM Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build WASM
        run: |
          cd xjp-oidc
          cargo build --target wasm32-unknown-unknown --no-default-features --features http-wasm,browser-min

      - name: Test with wasm-pack
        run: |
          cd xjp-oidc
          wasm-pack test --headless --firefox --chrome --features http-wasm,browser-min

  examples:
    name: Build Examples
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build all examples
        run: |
          cargo build --example axum-bff
          cargo build --example axum-guard
          cargo build --example cli-discover

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Generate coverage
        run: cargo llvm-cov --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: false

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run audit
        run: cargo audit

  semver:
    name: Semver Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-semver-checks
        run: cargo install cargo-semver-checks

      - name: Run semver checks
        run: cargo semver-checks check-release

  msrv:
    name: Minimum Supported Rust Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install MSRV Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.82.0  # From rust-version in Cargo.toml

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Check MSRV
        run: |
          cargo build --workspace
          cargo test --workspace